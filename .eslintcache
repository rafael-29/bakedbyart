[{"C:\\forweb\\projects\\bakedbyart\\src\\index.js":"1","C:\\forweb\\projects\\bakedbyart\\src\\App.js":"2","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Header.js":"3","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Home.js":"4","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bundle.js":"5","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Cart.js":"6","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Collection.js":"7","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Checkout.js":"8","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Shipping.js":"9","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Footer.js":"10","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Receipt.js":"11","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Signin.js":"12","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Register.js":"13","C:\\forweb\\projects\\bakedbyart\\src\\comp\\mobobanner.js":"14","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Mobobanner.js":"15"},{"size":168,"mtime":1609741551865,"results":"16","hashOfConfig":"17"},{"size":1227,"mtime":1610797029528,"results":"18","hashOfConfig":"17"},{"size":840,"mtime":1611738052720,"results":"19","hashOfConfig":"17"},{"size":8044,"mtime":1611738633545,"results":"20","hashOfConfig":"17"},{"size":1104,"mtime":1611740221150,"results":"21","hashOfConfig":"17"},{"size":5043,"mtime":1610720281989,"results":"22","hashOfConfig":"17"},{"size":773,"mtime":1611735139912,"results":"23","hashOfConfig":"17"},{"size":2230,"mtime":1610721118128,"results":"24","hashOfConfig":"17"},{"size":7021,"mtime":1611577391031,"results":"25","hashOfConfig":"17"},{"size":1702,"mtime":1610701135743,"results":"26","hashOfConfig":"17"},{"size":3553,"mtime":1611662594466,"results":"27","hashOfConfig":"17"},{"size":1984,"mtime":1610802738375,"results":"28","hashOfConfig":"17"},{"size":3393,"mtime":1610813211982,"results":"29","hashOfConfig":"17"},{"size":662,"mtime":1611737587205,"results":"30","hashOfConfig":"17"},{"size":662,"mtime":1611737587205,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"15mbugg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\forweb\\projects\\bakedbyart\\src\\index.js",[],["66","67"],"C:\\forweb\\projects\\bakedbyart\\src\\App.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Header.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Home.js",["68","69","70","71","72","73"],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bundle.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Cart.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Collection.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Checkout.js",["74","75"],"import React, { useState } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Checkout = () => {\r\n\r\n\r\nconst [guest, setGuest] = useState('');\r\nconst [login, setLogin] = useState();\r\nconst [pass, setPass] = useState();\r\n\r\nconst [isLogin, setIsLogin] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// FUNCTIONSSS\r\n\r\n\r\n\r\n\r\n// adding email to LOCAL STORAGE\r\nconst addEmailToLocal = (e) => {\r\ne.preventDefault()\r\nwindow.location.replace('/shipping')\r\n}\r\n\r\n// insertlocalem\r\nconst insertLocalEm = () => {\r\nconst emailLoc = guest;\r\nlocalStorage.setItem('localEm', JSON.stringify(emailLoc))\r\n}\r\n\r\n// START\r\nreturn(\r\n<div className=\"checkout-cont\">\r\n<h1 className=\"ch-logoname\">Baked.By.Art</h1>\r\n\r\n\r\n<div className=\"register-guest\">\r\n    <div className=\"guest\">\r\n        <div className=\"ch-head\">GUEST CHECKOUT</div>\r\n        <div className=\"ch-cnt\">You will be able to register your account at the end of checkout.</div>\r\n        <div className=\"ch-ben\">Benefits of Baked.By.Art account:</div>\r\n        <ul className=\"ch-ul\">\r\n            <li className=\"ch-li\">Expedited Checkout Process</li>\r\n            <li className=\"ch-li\">Exclusive Offers</li>\r\n        </ul>\r\n        <form className=\"ch-formz\" onSubmit={addEmailToLocal}>\r\n        <input type=\"email\" className=\"ch-email\" placeholder=\"Enter Email Address\" \r\n        value={guest} onChange={e => setGuest(e.target.value)} required />\r\n\r\n        <button onMouseMove={insertLocalEm} className=\"ch-btn\">\r\n        GUEST CHECKOUT\r\n        </button>\r\n\r\n        </form>\r\n    </div>\r\n  \r\n\r\n    <form className=\"ch-form\">\r\n        <p className=\"form-headcd\">REGISTERED CUSTOMERS</p>\r\n            <input type=\"email\" className=\"ch-email\" placeholder=\"Enter Email Address\" \r\n            value={login} onChange={e => setLogin(e.target.value)} required />\r\n            <input type=\"password\" className=\"ch-email\" placeholder=\"Enter Password\" \r\n            value={pass} onChange={e => setPass(e.target.value)} required />\r\n            <div className=\"ch-btnbx\">\r\n                <button className=\"ch-btnz\">Sign in</button>\r\n                <Link className=\"ch-link\" to=\"/forgot\">Forgot password?</Link>\r\n            </div>\r\n    </form>\r\n\r\n    \r\n</div>\r\n</div>\r\n)\r\n}\r\nexport default Checkout;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Shipping.js",["76"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Link } from 'react-router-dom';\r\nconst log = console.log;\r\n\r\n\r\n\r\nconst Shipping = () => {\r\n\r\nif(localStorage.getItem('carts') === null){\r\nwindow.location.replace('/')\r\n}\r\n\r\n\r\n\r\nconst [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n\r\n\r\nconst [shipName, setShipName] = useState();\r\nconst [shipLname, setShipLname] = useState();\r\nconst [shipAddress, setShipAdd] = useState();\r\nconst [shipSub, setShipSub] = useState();\r\nconst [shipCity, setShipCity] = useState();\r\nconst [shipPhone, setShipPhone] = useState();\r\nconst [rqMessage, setRqMessage] = useState();\r\n\r\nconst [isLoad, setIsLoad] = useState(false)\r\n\r\nconst [isComplete, setIsComplete] = useState(false)\r\n// FUNCTIONSS\r\nconst savetoData = () => {\r\n    const addThisTocart = JSON.parse(localStorage.getItem('carts'))\r\n    const addTotal = JSON.parse(localStorage.getItem('checkout'))\r\n    const  localemail = JSON.parse(localStorage.getItem('localEm'))\r\n    const address = JSON.parse(localStorage.getItem('address'))\r\n\r\n    const toPost = {\r\n    orderno: Math.floor(Math.random()*90000) + 10000,\r\n    useremail: localemail,\r\n    useraddress:address,\r\n    thecarts: addThisTocart,\r\n    total: addTotal,\r\n    orderdate: Date()\r\n    }\r\n\r\n    axios.post('https://bakedbyartapi.herokuapp.com/orders/add', toPost)\r\n    .then( () => {\r\n    const lastinfo = {orderno: toPost.orderno}\r\n    localStorage.setItem('lastinfo', JSON.stringify(lastinfo))\r\n    log('react axios saved to data')\r\n    })\r\n    .catch(err => log(err))\r\n}\r\n\r\nconst renderBodyNone = () => {\r\nwindow.document.querySelector('body').style.overflow = 'hidden';\r\n}\r\nconst renderLoadingScreen = () => (\r\n<div className=\"loadingscreen\">\r\n<div className=\"load-cont\">\r\n    <div className=\"img-loadbx\">\r\n        <img src=\"/images/april.png\" className=\"img-load\" alt=\"baked.by.art\" />\r\n    </div>\r\n    <h3>Processing your receipt ...</h3>\r\n    {renderBodyNone()}\r\n</div>\r\n</div>\r\n)\r\n\r\n\r\nconst addtoData = (e) => {\r\ne.preventDefault()\r\n\r\n\r\n\r\nif(shipPhone.length < 9){\r\nalert('Insert Valid Phone Number')\r\nreturn setShipPhone('')\r\n}\r\n\r\nsetIsLoad(true)\r\n\r\nconst toPut = {\r\nname: shipName,\r\nlname: shipLname,\r\naddress: shipAddress,\r\nbldg: shipSub,\r\ncity: shipCity,\r\nphone: shipPhone,\r\nrqmess: rqMessage,\r\ndate: selectedDate,\r\n}\r\nlocalStorage.setItem('address', JSON.stringify(toPut))\r\nsavetoData();\r\nrenderLoadingScreen()\r\nsetTimeout( ()  => {\r\nwindow.location.replace('/receipt')\r\n}, 1500)\r\n}\r\n\r\nconst checkComplete = () => {\r\nif(rqMessage === undefined || rqMessage.length === 0){\r\nsetIsComplete(false)\r\nalert('fill the missing blanks or put NONE')\r\n}else{\r\nsetIsComplete(true)\r\n}\r\n}\r\n\r\nreturn(\r\n<div className=\"shipping-page\" style={{position: 'relative'}}>\r\n<h1 style={{marginBottom: '30px'}} className=\"ch-logoname\">\r\n    <Link style={{textDecoration: 'none', color: 'brown'}} to=\"/\">Baked.By.Art</Link>\r\n</h1>\r\n    <div className=\"ship-cont\">\r\n\r\n        <div className=\"shipform-cont\">\r\n            <form className=\"ship-form\">\r\n                    <div className=\"shp-header\">SHIPPING</div>\r\n                <div className=\"form-namelastname inpbx\">\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"Name\"\r\n                    value={shipName} onChange={e => setShipName(e.target.value)} required/>\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"lastname\"\r\n                    value={shipLname} onChange={e => setShipLname(e.target.value)} required/>\r\n                </div>\r\n                <div className=\"ship-address-sub inpbx\">\r\n                    <input className=\"shp-inp shp-add\" type=\"text\" alt=\"\" placeholder=\"address\"\r\n                    value={shipAddress} onChange={e => setShipAdd(e.target.value)}required/>\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"Subv/Apt#/Bldg#\"\r\n                    value={shipSub} onChange={e => setShipSub(e.target.value)}required/>\r\n                </div>\r\n                <div className=\"zip-city inpbx\">\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"City\"\r\n                    value={shipCity} onChange={e => setShipCity(e.target.value)}required/>                   \r\n                </div>\r\n                <div className=\"phone-number inpbx\">\r\n                <input className=\"shp-inp phone\" type=\"number\" alt=\"\" placeholder=\"Phone Number\"\r\n                value={shipPhone} onChange={e => setShipPhone(e.target.value)} required/>\r\n                </div>\r\n                <label className=\"date-lbl\">Delivery date: <i class=\"fas fa-calendar-alt\"></i> <DatePicker className=\"date-fek\" selected={selectedDate} onChange={date => setSelectedDate(date)} />\r\n                </label>\r\n\r\n                <fieldset>\r\n                <legend>message your favorite topings and mix</legend>\r\n                <textarea className=\"rq-message\" value={rqMessage} \r\n                onChange={e => setRqMessage(e.target.value)}/>\r\n                </fieldset>\r\n\r\n                <div className=\"shp-header\">BILLING</div>\r\n                <div className=\"billing-bx\">\r\n                <label to=\"cod\" className=\"lbl-cod\">    \r\n                <input type=\"radio\" name=\"cod\" id=\"cod\" className=\"cod\"/> \r\n                Cash On Delivery</label>\r\n\r\n                <label to=\"paypal\" className=\"lbl-cod\">    \r\n                <input type=\"radio\" name=\"cod\" id=\"paypal\" className=\"cod\"/> \r\n                PAYPAL</label>\r\n                </div>\r\n\r\n                <div className=\"ship-btnbx\">\r\n                    <button onMouseMove={checkComplete} onClick={addtoData} className=\"ship-btn\">\r\n                    CONTINUE CHECKOUT\r\n                    </button>\r\n                </div>\r\n\r\n                \r\n            </form>\r\n        </div>    \r\n\r\n        <div className=\"ship-details\">\r\n        <div className=\"shp-header\">YOUR ORDERS</div>\r\n            {\r\n            JSON.parse(localStorage.getItem('carts')).map(shpitem => (\r\n            <div className=\"ship-items\" key={shpitem._id}>\r\n                <div className=\"ship-itemsImgBx\">\r\n                    <img src={shpitem.image} alt=\"baked.by.art\" \r\n                    className=\"shp-img\"/>\r\n                </div>\r\n                <div className=\"shipitem-name\">\r\n                    <div className=\"shp-name\">{shpitem.name}</div>\r\n                    <div className=\"shp-subname\">{shpitem.subname}</div>\r\n                    <div className=\"shp-qnty-cost\">\r\n                        <div className=\"shp-qnty\">{!shpitem.qnty ? shpitem.chosen : `${shpitem.qnty}${shpitem.qnty === 1 ? 'pc of bread' : 'pcs of bread'}`}</div>\r\n                        <div className=\"shp-cost\">${shpitem.cost}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n{isLoad ? renderLoadingScreen() : <> </>}\r\n</div>\r\n)\r\n}\r\nexport default Shipping;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Footer.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Receipt.js",["77"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nconst log = console.log;\r\n\r\n\r\n\r\n\r\nconst Receipt = () => {\r\n\r\nconst lastinfo = JSON.parse(localStorage.getItem('lastinfo'))\r\n\r\nlastinfo === null && window.location.reload()\r\n\r\n\r\n\r\nconst [alldata, setalldata] = useState()\r\n\r\n\r\n\r\n\r\nuseEffect( () => {\r\n\r\nretdata();\r\nsetTimeout( () => {\r\n    localStorage.removeItem('carts')\r\n    localStorage.removeItem('address')\r\n    localStorage.removeItem('checkout')\r\n    localStorage.removeItem('localEm')\r\n}, 1000)\r\n\r\n}, [])\r\n\r\nconst retdata = () => {\r\n    axios.get('https://bakedbyartapi.herokuapp.com/orders')\r\n    .then( rslts => {\r\n    const data = rslts.data;\r\n    setalldata(data)\r\n    })\r\n    .catch(err => log(err))\r\n}\r\n\r\nconst renderReceipt = () => {\r\n\r\nconst find = alldata.find(dat => parseInt(dat.orderno) === lastinfo.orderno)\r\nreturn(\r\n<>\r\n\r\n    <h1 className=\"rcpt-header\">RECEIPT</h1>\r\n\r\n <div className=\"rcpt-billinfo\">\r\n   \r\n    <div className=\"bill\">\r\n        <h3 className=\"rcp-ttle\">BILL TO</h3>\r\n        <ul className=\"rcp-ul\">\r\n            <li className=\"rcp-li\">{find.useraddress.name} {find.useraddress.lname}</li>\r\n            <li className=\"rcp-li\">{find.useraddress.address}</li>\r\n            <li className=\"rcp-li\">{find.useraddress.city}</li>\r\n        </ul>\r\n    </div> \r\n\r\n    <div className=\"order-info\">\r\n        <div className=\"order-n\"><span className=\"order-sp\">ORDER NO:</span> <span className=\"orderno\">{find.orderno}</span></div>\r\n        <div className=\"order-n\"><span className=\"order-sp\">ORDER DATE</span> <div className=\"date\">{find.orderdate}</div></div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div className=\"rcpt-ordersec\">\r\n    <div className=\"rcpt-tb-header\">\r\n        <h2 className=\"rcpt-headers\">Description</h2>\r\n        <h2 className=\"rcpt-headers\">Quantity</h2>\r\n        <h2 className=\"rcpt-headers\">Amount</h2>\r\n    </div>\r\n\r\n    <div className=\"rcpt-ordersbx\">\r\n        {\r\n        find.thecarts.map((crt) => (\r\n        <div className=\"rcpt-cart\" key={crt.uni}>\r\n            <div className=\"namebx\">\r\n                <div className=\"rcpt-namess\">{crt.name}</div>\r\n                <div className=\"rcpt-names\">{crt.subname}</div>\r\n            </div>\r\n\r\n            <div className=\"rcpt-namex align-rcpt\">{crt.chosen ? crt.chosen : `${crt.qnty}pcs`  }</div>\r\n\r\n            <div className=\"rcpt-namex\">₱{crt.cost}</div>\r\n        </div>\r\n        ))\r\n        }\r\n    </div>\r\n\r\n    <div className=\"type\">\r\n        <div>\r\n            <p className=\"payment-ship\">Ship to</p>\r\n            <p className=\"payment-info\">{find.useraddress.name} {find.useraddress.lname}</p>\r\n            <p className=\"payment-info\">{find.useraddress.address}</p>\r\n            <p className=\"payment-info\">{find.useraddress.bldg}</p>\r\n            <p className=\"payment-info\">{find.useraddress.city}</p>\r\n        </div>\r\n\r\n        <div>\r\n            <p className=\"tobepaid\">Total Amount: <span className=\"cash\">₱ {find.total.totalwship}</span></p>\r\n            <p className=\"payment\">Payment Type: <span className=\"crt-sp\">Cash On Delivery</span></p>\r\n            <button onClick={gothere}>CONFIRM ORDER</button>\r\n            \r\n        </div>\r\n    \r\n    </div>\r\n\r\n\r\n</div> \r\n\r\n</>\r\n)\r\n\r\n}\r\n\r\n\r\n\r\nconst renderLoad = () => (\r\n    <h1>Loading ...</h1>\r\n)\r\n\r\n\r\n\r\nconst gothere = () => {\r\nlocalStorage.clear()\r\nwindow.location.replace('/')\r\n}\r\n\r\n\r\n\r\n\r\n////////////// RETURN OF JSX\r\nreturn(\r\n<div className=\"receipt-page\">\r\n\r\n{alldata === undefined ? <h2>Loading ...</h2> : renderReceipt()}\r\n\r\n\r\n</div>\r\n)\r\n}\r\nexport default Receipt;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Signin.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Register.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\mobobanner.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Mobobanner.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"86","line":22,"column":8,"nodeType":"84","messageId":"85","endLine":22,"endColumn":20},{"ruleId":"82","severity":1,"message":"87","line":22,"column":22,"nodeType":"84","messageId":"85","endLine":22,"endColumn":34},{"ruleId":"82","severity":1,"message":"88","line":67,"column":19,"nodeType":"84","messageId":"85","endLine":67,"endColumn":31},{"ruleId":"82","severity":1,"message":"89","line":75,"column":7,"nodeType":"84","messageId":"85","endLine":75,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":215,"column":17,"nodeType":"92","endLine":216,"endColumn":43},{"ruleId":"82","severity":1,"message":"93","line":14,"column":8,"nodeType":"84","messageId":"85","endLine":14,"endColumn":15},{"ruleId":"82","severity":1,"message":"94","line":14,"column":17,"nodeType":"84","messageId":"85","endLine":14,"endColumn":27},{"ruleId":"82","severity":1,"message":"95","line":32,"column":8,"nodeType":"84","messageId":"85","endLine":32,"endColumn":18},{"ruleId":"82","severity":1,"message":"96","line":120,"column":7,"nodeType":"84","messageId":"85","endLine":120,"endColumn":17},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'bananaBreads' is assigned a value but never used.","'setBananabre' is assigned a value but never used.","'setbundleqty' is assigned a value but never used.","'addTo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLogin' is assigned a value but never used.","'setIsLogin' is assigned a value but never used.","'isComplete' is assigned a value but never used.","'renderLoad' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]