[{"C:\\forweb\\projects\\bakedbyart\\src\\index.js":"1","C:\\forweb\\projects\\bakedbyart\\src\\App.js":"2","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Header.js":"3","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Home.js":"4","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bundle.js":"5","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Cart.js":"6","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Collection.js":"7","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Checkout.js":"8","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Shipping.js":"9","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Footer.js":"10","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Receipt.js":"11","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Signin.js":"12","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Register.js":"13","C:\\forweb\\projects\\bakedbyart\\src\\comp\\mobobanner.js":"14","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Mobobanner.js":"15","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bananamenus.js":"16","C:\\forweb\\projects\\bakedbyart\\src\\comp\\BananasInfo.js":"17"},{"size":168,"mtime":1609741551865,"results":"18","hashOfConfig":"19"},{"size":2491,"mtime":1611822636285,"results":"20","hashOfConfig":"19"},{"size":840,"mtime":1611738052720,"results":"21","hashOfConfig":"19"},{"size":8044,"mtime":1611746393163,"results":"22","hashOfConfig":"19"},{"size":1104,"mtime":1611740221150,"results":"23","hashOfConfig":"19"},{"size":5043,"mtime":1610720281989,"results":"24","hashOfConfig":"19"},{"size":899,"mtime":1611821800167,"results":"25","hashOfConfig":"19"},{"size":2230,"mtime":1610721118128,"results":"26","hashOfConfig":"19"},{"size":7021,"mtime":1611577391031,"results":"27","hashOfConfig":"19"},{"size":1702,"mtime":1610701135743,"results":"28","hashOfConfig":"19"},{"size":3553,"mtime":1611662594466,"results":"29","hashOfConfig":"19"},{"size":1984,"mtime":1610802738375,"results":"30","hashOfConfig":"19"},{"size":3387,"mtime":1611743758506,"results":"31","hashOfConfig":"19"},{"size":662,"mtime":1611737587205,"results":"32","hashOfConfig":"19"},{"size":662,"mtime":1611737587205,"results":"33","hashOfConfig":"19"},{"size":1034,"mtime":1611822845940,"results":"34","hashOfConfig":"19"},{"size":128,"mtime":1611818609591,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15mbugg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\forweb\\projects\\bakedbyart\\src\\index.js",[],["75","76"],"C:\\forweb\\projects\\bakedbyart\\src\\App.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Header.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Home.js",["77","78","79","80","81","82"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Bundle from './Bundle';\r\nimport Collection from './Collection'\r\nimport Mobobanner from './Mobobanner';\r\n\r\nconst banana = 'banana-breads';\r\nconst cookies = 'cookies';\r\nconst log = console.log;\r\n\r\nconst full = \"16pcs full bundle\";\r\nconst half = \"8pcs half bundle\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n// for rendering pages\r\nconst [page, setPage] = useState(banana)\r\n\r\nconst [bananaBreads, setBananabre] = useState([\r\n    {\r\n        id: 101,\r\n        name: 'Banana Loaf',\r\n        cost: 200,\r\n        qnty: 1,\r\n        image: 'images/bananaloaves.jpg',\r\n        subname: 'banana Loaves with hazzlenuts'\r\n        },\r\n        {\r\n        id: 102,\r\n        name: 'Cream cheese',\r\n        cost: 225,\r\n        qnty: 1,\r\n        image: 'images/creamcheese.jpg',\r\n        subname: 'banana Loaves with cream cheese'\r\n        }\r\n])\r\nconst [cookiesBread, setCookies] = useState([\r\n    {\r\n        id: 201,\r\n        name: 'Classic Cookies',\r\n        cost: 24,\r\n        qnty: 6,\r\n        image: 'images/classic.jpg',\r\n        subname: 'classic cookies loaded with choco'\r\n        },\r\n        {\r\n        id: 202,\r\n        name: 'Choco Macadamia',\r\n        cost: 41,\r\n        qnty: 6,\r\n        image: 'images/chocomacadamia.jpg',\r\n        subname: 'this cookie is mixed with white nuts'\r\n        }\r\n        \r\n])\r\nconst [bundle, setBundle] = useState({\r\n    id: 333,\r\n    name: 'Banana Breads',\r\n    chosen: full,\r\n    cost: 0,\r\n    image: 'images/collectiontwo.jpg',\r\n    subname: 'assorted flavors of Banana Breads'\r\n})\r\nconst [bundleqty, setbundleqty] = useState([full, half])\r\n\r\n//////// FUNCTIONS\r\n\r\nconst changeCost = (e) => {\r\nsetBundle({...bundle, chosen: e.target.value})\r\n}\r\n\r\nconst addTo = (e) => {\r\n\r\naxios.get('http://localhost:5000/cart')\r\n.then( rslts => {\r\nconst data = rslts.data;\r\n\r\nconst found = data.some(dat => dat.name === e.name)\r\n\r\nif(found){\r\n\r\nconst find = data.find(det => det.name === e.name)\r\n\r\nconst thesum = e.cost*e.qnty;\r\nconst finalcost = thesum+find.cost;\r\nconst toUpdate = {\r\n    name: e.name,\r\n    cost: finalcost,\r\n    qnty: e.qnty+find.qnty,\r\n    subname: e.subname,\r\n    image: e.image\r\n}\r\n\r\naxios.put(`http://localhost:5000/cart/${e.name}`, toUpdate)\r\n.then( () => log('update success'))\r\n.catch(err => log(err))\r\n\r\n}else{\r\nconst toSave = {\r\n    name: e.name,\r\n    cost: e.cost*e.qnty,\r\n    qnty: e.qnty,\r\n    subname: e.subname,\r\n    image: e.image\r\n}\r\n\r\naxios.post('http://localhost:5000/cart/add', toSave)\r\n.then( () => log('success saving'))\r\n.catch(err => log(err))\r\n}\r\n\r\n})\r\n}\r\n\r\nconst addBundleOrder = (e) => {\r\n\r\n\r\nlet items;\r\nif(localStorage.getItem('carts') === null){\r\nitems = []\r\n}else{\r\nitems = JSON.parse(localStorage.getItem('carts'))\r\n}\r\nconst bundle = {\r\n    uni: Math.random(items.length),\r\n    name: e.name,\r\n    subname: e.subname,\r\n    chosen: e.chosen,\r\n    cost: e.qnty ? e.cost*e.qnty : e.cost,\r\n    image: e.image,\r\n    qnty: e.qnty\r\n    }\r\nitems.push(bundle)\r\nlocalStorage.setItem('carts', JSON.stringify(items))\r\n\r\nalert('One Item Is Added To The Cart')\r\nwindow.location.reload();\r\n}\r\n\r\n// add qnty bread\r\n// const addqnty = (e) => {\r\n// setBananabre(bananaBreads.map(bnana => bnana.name === e.name ? {...bnana, qnty: bnana.qnty+1} : bnana))\r\n// }\r\n// // deduct qnty bread\r\n// const deduct = (e) => {\r\n// const find = bananaBreads.find(bnana => bnana.name  === e.name);\r\n\r\n// if(find.qnty === 1){\r\n// setBananabre(bananaBreads.map(bnana => bnana.name === e.name ? {...bnana, qnty: 1} : bnana))\r\n// }else{\r\n// setBananabre(bananaBreads.map(bnana => bnana.name === e.name ? {...bnana, qnty: bnana.qnty -1} : bnana))\r\n// }\r\n\r\n// }\r\n\r\n\r\n// add qnty cookie\r\nconst addqntycookie = (e) => {\r\n//setCookies(cookiesBread.map(cook => cook.name === e.name ? {...cook, qnty: cook.qnty +1 } : cook))\r\n\r\nsetCookies(cookiesBread.map(cook => {\r\nif(cook.name === e.name){\r\n\r\nconst fixed = {...cook, qnty: cook.qnty + 1}\r\nreturn fixed;\r\n\r\n}else{\r\nreturn cook;\r\n}\r\n}))\r\n\r\n}\r\n\r\n// deduct qnty cookie\r\nconst deductCookie = (e) => {\r\nconst matched = cookiesBread.find(cook => cook.name === e.name)\r\n\r\nif(matched.qnty === 6){\r\nsetCookies(cookiesBread.map(cook => cook.name === e.name ? {...cook, qnty: 6} : cook))\r\n}else{\r\nsetCookies(cookiesBread.map(cook => cook.name ===e.name ? {...cook, qnty: cook.qnty -1 } : cook))\r\n}\r\n\r\n}\r\n\r\n\r\n\r\nconst showNow = () => {\r\nsetBundle({...bundle, cost: bundle.chosen === full ? 1000 : 600})\r\n}\r\n\r\n\r\n\r\n// rendering banana menus \r\nconst bananaMenu = () => (\r\n<div className=\"banana-breads\">\r\n\r\n    <div className=\"bundle-order\">\r\n\r\n        <div className=\"bndl-imgbx\">\r\n            <img src={bundle.image} alt=\"baked.by.art\"\r\n            className=\"bndl-img\" />\r\n        </div>\r\n\r\n        <div className=\"bndl-cnt\">\r\n            <div>\r\n                <div className=\"bndl-name\">{bundle.name}</div>\r\n                <div className=\"bndl-subname\">{bundle.subname}</div>\r\n            </div>\r\n\r\n            <div className=\"another-imgbx\">\r\n                <img src=\"/images/collectionone.jpg\"\r\n                className=\"another-img\" />\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"bndle-cost\">Price: ₱{bundle.chosen === full ? 1000 : 600}</div>\r\n                <div>\r\n                <label className=\"bndl-label\">Choose Quantity: </label>\r\n                <select value={bundle.chosen} onChange={changeCost} className=\"bndl-sel\">\r\n                {\r\n                bundleqty.map((bndl,idx) => (\r\n                <option value={bndl} key={idx}>{bndl}</option>\r\n                ))\r\n                }\r\n                </select>\r\n                </div>\r\n                <div className=\"bndl-inst\">you can choose your topings after the check out</div>\r\n                <div className=\"btn-cont\">\r\n                <button onClick={() => addBundleOrder(bundle)} onMouseDown={showNow} className=\"bndl-btn\">ADD TO CART</button>\r\n                <button onClick={() => log(bundle)} onMouseDown={showNow} className=\"bndlshow-btn\">SHOW ALL MENU</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n)\r\n\r\n// rendering cookies menu\r\nconst cookiesMenu = () => (\r\n<div className=\"cookie-breads\">\r\n\r\n\r\n<div className=\"flex-cont\">\r\n{\r\ncookiesBread.map(bread => (\r\n<div className=\"bread-cont\" key={bread.id}>\r\n\r\n    <div className=\"bread-imgbx\">\r\n    <img src={bread.image} alt=\"baked.by.art\" className=\"img-bread\"/>\r\n    </div>\r\n\r\n    <div className=\"bread-cnt\">\r\n    <div className=\"bread-name\">{bread.name}</div>\r\n    <div className=\"bread-subname\">{bread.subname}</div>\r\n\r\n    <div className=\"price\">₱{bread.cost*bread.qnty}</div>\r\n        <div className=\"qnty-bx\">\r\n          \r\n                <div className=\"qnty-cap\">Quantity:</div>\r\n\r\n                <div className=\"qnty-cont\">\r\n                    <div className=\"qntys\">{bread.qnty}</div>\r\n\r\n                    <div className=\"qnty-btns\">\r\n                        <button onClick={() => addqntycookie(bread)} className=\"qnty-btn\"><i className=\"fas fa-plus\"></i></button>\r\n                        <button onClick={() => deductCookie(bread)} className=\"qnty-btn\"><i className=\"fas fa-minus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            \r\n        </div>\r\n    \r\n    <button onClick={() => addBundleOrder(bread)} className=\"addtocart\">ADD TO CART</button>\r\n    <button className=\"openmenu\">OPEN ALL MENU</button>\r\n    </div>\r\n\r\n</div>\r\n))\r\n}\r\n</div>\r\n\r\n\r\n</div>\r\n)\r\n///////////////////// FUNCTIONS\r\n\r\n\r\n\r\n//// START OF RETURNING HTML\r\nreturn(\r\n<div>\r\n\r\n\r\n<Collection />\r\n<Mobobanner />\r\n\r\n<ul style={{marginTop: '60px'}} className=\"bread-choice\">\r\n<li>\r\n<button className={page === banana ? 'active' : 'not-active'}\r\nonClick={() => setPage(banana)}>Banana Breads</button>\r\n</li>\r\n<li>\r\n<button className={page === cookies ? 'active' : 'not-active'}\r\nonClick={() => setPage(cookies)}>Cookies</button>\r\n</li>\r\n</ul>\r\n\r\n{page === banana ? bananaMenu() : cookiesMenu()}\r\n\r\n\r\n<p className=\"gallery\">Gallery</p>\r\n<Bundle />\r\n\r\n</div>\r\n)}\r\nexport default Home;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bundle.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Cart.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Collection.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Checkout.js",["83","84"],"import React, { useState } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Checkout = () => {\r\n\r\n\r\nconst [guest, setGuest] = useState('');\r\nconst [login, setLogin] = useState();\r\nconst [pass, setPass] = useState();\r\n\r\nconst [isLogin, setIsLogin] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// FUNCTIONSSS\r\n\r\n\r\n\r\n\r\n// adding email to LOCAL STORAGE\r\nconst addEmailToLocal = (e) => {\r\ne.preventDefault()\r\nwindow.location.replace('/shipping')\r\n}\r\n\r\n// insertlocalem\r\nconst insertLocalEm = () => {\r\nconst emailLoc = guest;\r\nlocalStorage.setItem('localEm', JSON.stringify(emailLoc))\r\n}\r\n\r\n// START\r\nreturn(\r\n<div className=\"checkout-cont\">\r\n<h1 className=\"ch-logoname\">Baked.By.Art</h1>\r\n\r\n\r\n<div className=\"register-guest\">\r\n    <div className=\"guest\">\r\n        <div className=\"ch-head\">GUEST CHECKOUT</div>\r\n        <div className=\"ch-cnt\">You will be able to register your account at the end of checkout.</div>\r\n        <div className=\"ch-ben\">Benefits of Baked.By.Art account:</div>\r\n        <ul className=\"ch-ul\">\r\n            <li className=\"ch-li\">Expedited Checkout Process</li>\r\n            <li className=\"ch-li\">Exclusive Offers</li>\r\n        </ul>\r\n        <form className=\"ch-formz\" onSubmit={addEmailToLocal}>\r\n        <input type=\"email\" className=\"ch-email\" placeholder=\"Enter Email Address\" \r\n        value={guest} onChange={e => setGuest(e.target.value)} required />\r\n\r\n        <button onMouseMove={insertLocalEm} className=\"ch-btn\">\r\n        GUEST CHECKOUT\r\n        </button>\r\n\r\n        </form>\r\n    </div>\r\n  \r\n\r\n    <form className=\"ch-form\">\r\n        <p className=\"form-headcd\">REGISTERED CUSTOMERS</p>\r\n            <input type=\"email\" className=\"ch-email\" placeholder=\"Enter Email Address\" \r\n            value={login} onChange={e => setLogin(e.target.value)} required />\r\n            <input type=\"password\" className=\"ch-email\" placeholder=\"Enter Password\" \r\n            value={pass} onChange={e => setPass(e.target.value)} required />\r\n            <div className=\"ch-btnbx\">\r\n                <button className=\"ch-btnz\">Sign in</button>\r\n                <Link className=\"ch-link\" to=\"/forgot\">Forgot password?</Link>\r\n            </div>\r\n    </form>\r\n\r\n    \r\n</div>\r\n</div>\r\n)\r\n}\r\nexport default Checkout;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Shipping.js",["85"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Link } from 'react-router-dom';\r\nconst log = console.log;\r\n\r\n\r\n\r\nconst Shipping = () => {\r\n\r\nif(localStorage.getItem('carts') === null){\r\nwindow.location.replace('/')\r\n}\r\n\r\n\r\n\r\nconst [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n\r\n\r\nconst [shipName, setShipName] = useState();\r\nconst [shipLname, setShipLname] = useState();\r\nconst [shipAddress, setShipAdd] = useState();\r\nconst [shipSub, setShipSub] = useState();\r\nconst [shipCity, setShipCity] = useState();\r\nconst [shipPhone, setShipPhone] = useState();\r\nconst [rqMessage, setRqMessage] = useState();\r\n\r\nconst [isLoad, setIsLoad] = useState(false)\r\n\r\nconst [isComplete, setIsComplete] = useState(false)\r\n// FUNCTIONSS\r\nconst savetoData = () => {\r\n    const addThisTocart = JSON.parse(localStorage.getItem('carts'))\r\n    const addTotal = JSON.parse(localStorage.getItem('checkout'))\r\n    const  localemail = JSON.parse(localStorage.getItem('localEm'))\r\n    const address = JSON.parse(localStorage.getItem('address'))\r\n\r\n    const toPost = {\r\n    orderno: Math.floor(Math.random()*90000) + 10000,\r\n    useremail: localemail,\r\n    useraddress:address,\r\n    thecarts: addThisTocart,\r\n    total: addTotal,\r\n    orderdate: Date()\r\n    }\r\n\r\n    axios.post('https://bakedbyartapi.herokuapp.com/orders/add', toPost)\r\n    .then( () => {\r\n    const lastinfo = {orderno: toPost.orderno}\r\n    localStorage.setItem('lastinfo', JSON.stringify(lastinfo))\r\n    log('react axios saved to data')\r\n    })\r\n    .catch(err => log(err))\r\n}\r\n\r\nconst renderBodyNone = () => {\r\nwindow.document.querySelector('body').style.overflow = 'hidden';\r\n}\r\nconst renderLoadingScreen = () => (\r\n<div className=\"loadingscreen\">\r\n<div className=\"load-cont\">\r\n    <div className=\"img-loadbx\">\r\n        <img src=\"/images/april.png\" className=\"img-load\" alt=\"baked.by.art\" />\r\n    </div>\r\n    <h3>Processing your receipt ...</h3>\r\n    {renderBodyNone()}\r\n</div>\r\n</div>\r\n)\r\n\r\n\r\nconst addtoData = (e) => {\r\ne.preventDefault()\r\n\r\n\r\n\r\nif(shipPhone.length < 9){\r\nalert('Insert Valid Phone Number')\r\nreturn setShipPhone('')\r\n}\r\n\r\nsetIsLoad(true)\r\n\r\nconst toPut = {\r\nname: shipName,\r\nlname: shipLname,\r\naddress: shipAddress,\r\nbldg: shipSub,\r\ncity: shipCity,\r\nphone: shipPhone,\r\nrqmess: rqMessage,\r\ndate: selectedDate,\r\n}\r\nlocalStorage.setItem('address', JSON.stringify(toPut))\r\nsavetoData();\r\nrenderLoadingScreen()\r\nsetTimeout( ()  => {\r\nwindow.location.replace('/receipt')\r\n}, 1500)\r\n}\r\n\r\nconst checkComplete = () => {\r\nif(rqMessage === undefined || rqMessage.length === 0){\r\nsetIsComplete(false)\r\nalert('fill the missing blanks or put NONE')\r\n}else{\r\nsetIsComplete(true)\r\n}\r\n}\r\n\r\nreturn(\r\n<div className=\"shipping-page\" style={{position: 'relative'}}>\r\n<h1 style={{marginBottom: '30px'}} className=\"ch-logoname\">\r\n    <Link style={{textDecoration: 'none', color: 'brown'}} to=\"/\">Baked.By.Art</Link>\r\n</h1>\r\n    <div className=\"ship-cont\">\r\n\r\n        <div className=\"shipform-cont\">\r\n            <form className=\"ship-form\">\r\n                    <div className=\"shp-header\">SHIPPING</div>\r\n                <div className=\"form-namelastname inpbx\">\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"Name\"\r\n                    value={shipName} onChange={e => setShipName(e.target.value)} required/>\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"lastname\"\r\n                    value={shipLname} onChange={e => setShipLname(e.target.value)} required/>\r\n                </div>\r\n                <div className=\"ship-address-sub inpbx\">\r\n                    <input className=\"shp-inp shp-add\" type=\"text\" alt=\"\" placeholder=\"address\"\r\n                    value={shipAddress} onChange={e => setShipAdd(e.target.value)}required/>\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"Subv/Apt#/Bldg#\"\r\n                    value={shipSub} onChange={e => setShipSub(e.target.value)}required/>\r\n                </div>\r\n                <div className=\"zip-city inpbx\">\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"City\"\r\n                    value={shipCity} onChange={e => setShipCity(e.target.value)}required/>                   \r\n                </div>\r\n                <div className=\"phone-number inpbx\">\r\n                <input className=\"shp-inp phone\" type=\"number\" alt=\"\" placeholder=\"Phone Number\"\r\n                value={shipPhone} onChange={e => setShipPhone(e.target.value)} required/>\r\n                </div>\r\n                <label className=\"date-lbl\">Delivery date: <i class=\"fas fa-calendar-alt\"></i> <DatePicker className=\"date-fek\" selected={selectedDate} onChange={date => setSelectedDate(date)} />\r\n                </label>\r\n\r\n                <fieldset>\r\n                <legend>message your favorite topings and mix</legend>\r\n                <textarea className=\"rq-message\" value={rqMessage} \r\n                onChange={e => setRqMessage(e.target.value)}/>\r\n                </fieldset>\r\n\r\n                <div className=\"shp-header\">BILLING</div>\r\n                <div className=\"billing-bx\">\r\n                <label to=\"cod\" className=\"lbl-cod\">    \r\n                <input type=\"radio\" name=\"cod\" id=\"cod\" className=\"cod\"/> \r\n                Cash On Delivery</label>\r\n\r\n                <label to=\"paypal\" className=\"lbl-cod\">    \r\n                <input type=\"radio\" name=\"cod\" id=\"paypal\" className=\"cod\"/> \r\n                PAYPAL</label>\r\n                </div>\r\n\r\n                <div className=\"ship-btnbx\">\r\n                    <button onMouseMove={checkComplete} onClick={addtoData} className=\"ship-btn\">\r\n                    CONTINUE CHECKOUT\r\n                    </button>\r\n                </div>\r\n\r\n                \r\n            </form>\r\n        </div>    \r\n\r\n        <div className=\"ship-details\">\r\n        <div className=\"shp-header\">YOUR ORDERS</div>\r\n            {\r\n            JSON.parse(localStorage.getItem('carts')).map(shpitem => (\r\n            <div className=\"ship-items\" key={shpitem._id}>\r\n                <div className=\"ship-itemsImgBx\">\r\n                    <img src={shpitem.image} alt=\"baked.by.art\" \r\n                    className=\"shp-img\"/>\r\n                </div>\r\n                <div className=\"shipitem-name\">\r\n                    <div className=\"shp-name\">{shpitem.name}</div>\r\n                    <div className=\"shp-subname\">{shpitem.subname}</div>\r\n                    <div className=\"shp-qnty-cost\">\r\n                        <div className=\"shp-qnty\">{!shpitem.qnty ? shpitem.chosen : `${shpitem.qnty}${shpitem.qnty === 1 ? 'pc of bread' : 'pcs of bread'}`}</div>\r\n                        <div className=\"shp-cost\">${shpitem.cost}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n{isLoad ? renderLoadingScreen() : <> </>}\r\n</div>\r\n)\r\n}\r\nexport default Shipping;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Footer.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Receipt.js",["86"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nconst log = console.log;\r\n\r\n\r\n\r\n\r\nconst Receipt = () => {\r\n\r\nconst lastinfo = JSON.parse(localStorage.getItem('lastinfo'))\r\n\r\nlastinfo === null && window.location.reload()\r\n\r\n\r\n\r\nconst [alldata, setalldata] = useState()\r\n\r\n\r\n\r\n\r\nuseEffect( () => {\r\n\r\nretdata();\r\nsetTimeout( () => {\r\n    localStorage.removeItem('carts')\r\n    localStorage.removeItem('address')\r\n    localStorage.removeItem('checkout')\r\n    localStorage.removeItem('localEm')\r\n}, 1000)\r\n\r\n}, [])\r\n\r\nconst retdata = () => {\r\n    axios.get('https://bakedbyartapi.herokuapp.com/orders')\r\n    .then( rslts => {\r\n    const data = rslts.data;\r\n    setalldata(data)\r\n    })\r\n    .catch(err => log(err))\r\n}\r\n\r\nconst renderReceipt = () => {\r\n\r\nconst find = alldata.find(dat => parseInt(dat.orderno) === lastinfo.orderno)\r\nreturn(\r\n<>\r\n\r\n    <h1 className=\"rcpt-header\">RECEIPT</h1>\r\n\r\n <div className=\"rcpt-billinfo\">\r\n   \r\n    <div className=\"bill\">\r\n        <h3 className=\"rcp-ttle\">BILL TO</h3>\r\n        <ul className=\"rcp-ul\">\r\n            <li className=\"rcp-li\">{find.useraddress.name} {find.useraddress.lname}</li>\r\n            <li className=\"rcp-li\">{find.useraddress.address}</li>\r\n            <li className=\"rcp-li\">{find.useraddress.city}</li>\r\n        </ul>\r\n    </div> \r\n\r\n    <div className=\"order-info\">\r\n        <div className=\"order-n\"><span className=\"order-sp\">ORDER NO:</span> <span className=\"orderno\">{find.orderno}</span></div>\r\n        <div className=\"order-n\"><span className=\"order-sp\">ORDER DATE</span> <div className=\"date\">{find.orderdate}</div></div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div className=\"rcpt-ordersec\">\r\n    <div className=\"rcpt-tb-header\">\r\n        <h2 className=\"rcpt-headers\">Description</h2>\r\n        <h2 className=\"rcpt-headers\">Quantity</h2>\r\n        <h2 className=\"rcpt-headers\">Amount</h2>\r\n    </div>\r\n\r\n    <div className=\"rcpt-ordersbx\">\r\n        {\r\n        find.thecarts.map((crt) => (\r\n        <div className=\"rcpt-cart\" key={crt.uni}>\r\n            <div className=\"namebx\">\r\n                <div className=\"rcpt-namess\">{crt.name}</div>\r\n                <div className=\"rcpt-names\">{crt.subname}</div>\r\n            </div>\r\n\r\n            <div className=\"rcpt-namex align-rcpt\">{crt.chosen ? crt.chosen : `${crt.qnty}pcs`  }</div>\r\n\r\n            <div className=\"rcpt-namex\">₱{crt.cost}</div>\r\n        </div>\r\n        ))\r\n        }\r\n    </div>\r\n\r\n    <div className=\"type\">\r\n        <div>\r\n            <p className=\"payment-ship\">Ship to</p>\r\n            <p className=\"payment-info\">{find.useraddress.name} {find.useraddress.lname}</p>\r\n            <p className=\"payment-info\">{find.useraddress.address}</p>\r\n            <p className=\"payment-info\">{find.useraddress.bldg}</p>\r\n            <p className=\"payment-info\">{find.useraddress.city}</p>\r\n        </div>\r\n\r\n        <div>\r\n            <p className=\"tobepaid\">Total Amount: <span className=\"cash\">₱ {find.total.totalwship}</span></p>\r\n            <p className=\"payment\">Payment Type: <span className=\"crt-sp\">Cash On Delivery</span></p>\r\n            <button onClick={gothere}>CONFIRM ORDER</button>\r\n            \r\n        </div>\r\n    \r\n    </div>\r\n\r\n\r\n</div> \r\n\r\n</>\r\n)\r\n\r\n}\r\n\r\n\r\n\r\nconst renderLoad = () => (\r\n    <h1>Loading ...</h1>\r\n)\r\n\r\n\r\n\r\nconst gothere = () => {\r\nlocalStorage.clear()\r\nwindow.location.replace('/')\r\n}\r\n\r\n\r\n\r\n\r\n////////////// RETURN OF JSX\r\nreturn(\r\n<div className=\"receipt-page\">\r\n\r\n{alldata === undefined ? <h2>Loading ...</h2> : renderReceipt()}\r\n\r\n\r\n</div>\r\n)\r\n}\r\nexport default Receipt;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Signin.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Register.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\mobobanner.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Mobobanner.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bananamenus.js",["87"],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\BananasInfo.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"96","line":22,"column":8,"nodeType":"94","messageId":"95","endLine":22,"endColumn":20},{"ruleId":"92","severity":1,"message":"97","line":22,"column":22,"nodeType":"94","messageId":"95","endLine":22,"endColumn":34},{"ruleId":"92","severity":1,"message":"98","line":67,"column":19,"nodeType":"94","messageId":"95","endLine":67,"endColumn":31},{"ruleId":"92","severity":1,"message":"99","line":75,"column":7,"nodeType":"94","messageId":"95","endLine":75,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":215,"column":17,"nodeType":"102","endLine":216,"endColumn":43},{"ruleId":"92","severity":1,"message":"103","line":14,"column":8,"nodeType":"94","messageId":"95","endLine":14,"endColumn":15},{"ruleId":"92","severity":1,"message":"104","line":14,"column":17,"nodeType":"94","messageId":"95","endLine":14,"endColumn":27},{"ruleId":"92","severity":1,"message":"105","line":32,"column":8,"nodeType":"94","messageId":"95","endLine":32,"endColumn":18},{"ruleId":"92","severity":1,"message":"106","line":120,"column":7,"nodeType":"94","messageId":"95","endLine":120,"endColumn":17},{"ruleId":"92","severity":1,"message":"107","line":7,"column":20,"nodeType":"94","messageId":"95","endLine":7,"endColumn":33},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'bananaBreads' is assigned a value but never used.","'setBananabre' is assigned a value but never used.","'setbundleqty' is assigned a value but never used.","'addTo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLogin' is assigned a value but never used.","'setIsLogin' is assigned a value but never used.","'isComplete' is assigned a value but never used.","'renderLoad' is assigned a value but never used.","'setThebananaz' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]