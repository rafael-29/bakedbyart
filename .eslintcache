[{"C:\\forweb\\projects\\bakedbyart\\src\\index.js":"1","C:\\forweb\\projects\\bakedbyart\\src\\App.js":"2","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Header.js":"3","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Home.js":"4","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bundle.js":"5","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Cart.js":"6","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Collection.js":"7","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Checkout.js":"8","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Shipping.js":"9","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Footer.js":"10","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Receipt.js":"11","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Signin.js":"12","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Register.js":"13","C:\\forweb\\projects\\bakedbyart\\src\\comp\\mobobanner.js":"14","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Mobobanner.js":"15","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bananamenus.js":"16","C:\\forweb\\projects\\bakedbyart\\src\\comp\\BananasInfo.js":"17","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Popup.js":"18","C:\\forweb\\projects\\bakedbyart\\src\\comp\\AdminPage.js":"19","C:\\forweb\\projects\\bakedbyart\\src\\comp\\AboutCookies.js":"20","C:\\forweb\\projects\\bakedbyart\\src\\comp\\CookieMenu.js":"21","C:\\forweb\\projects\\bakedbyart\\src\\comp\\CookieInfo.js":"22"},{"size":168,"mtime":1609741551865,"results":"23","hashOfConfig":"24"},{"size":4227,"mtime":1613462104018,"results":"25","hashOfConfig":"24"},{"size":1829,"mtime":1612262412289,"results":"26","hashOfConfig":"24"},{"size":7576,"mtime":1613462066897,"results":"27","hashOfConfig":"24"},{"size":1339,"mtime":1613463986516,"results":"28","hashOfConfig":"24"},{"size":5121,"mtime":1613388374201,"results":"29","hashOfConfig":"24"},{"size":959,"mtime":1613388405438,"results":"30","hashOfConfig":"24"},{"size":2082,"mtime":1612249203201,"results":"31","hashOfConfig":"24"},{"size":6994,"mtime":1612242099586,"results":"32","hashOfConfig":"24"},{"size":1702,"mtime":1610701135743,"results":"33","hashOfConfig":"24"},{"size":3838,"mtime":1612243709875,"results":"34","hashOfConfig":"24"},{"size":4475,"mtime":1612431324035,"results":"35","hashOfConfig":"24"},{"size":3387,"mtime":1611743758506,"results":"36","hashOfConfig":"24"},{"size":662,"mtime":1611737587205,"results":"37","hashOfConfig":"24"},{"size":662,"mtime":1611737587205,"results":"38","hashOfConfig":"24"},{"size":1127,"mtime":1612106913606,"results":"39","hashOfConfig":"24"},{"size":2898,"mtime":1612340416734,"results":"40","hashOfConfig":"24"},{"size":770,"mtime":1612332909204,"results":"41","hashOfConfig":"24"},{"size":6851,"mtime":1612545074289,"results":"42","hashOfConfig":"24"},{"size":987,"mtime":1613388618856,"results":"43","hashOfConfig":"24"},{"size":1121,"mtime":1613387524610,"results":"44","hashOfConfig":"24"},{"size":2891,"mtime":1613388332317,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"15mbugg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\forweb\\projects\\bakedbyart\\src\\index.js",[],["95","96"],"C:\\forweb\\projects\\bakedbyart\\src\\App.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Header.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Home.js",["97"],"import React, { useState, useEffect } from 'react';\r\nimport Bundle from './Bundle';\r\nimport Mobobanner from './Mobobanner';\r\nimport AboutCookies from './AboutCookies';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst banana = 'banana-breads';\r\nconst cookies = 'cookies';\r\n\r\nconst full = \"16pcs of cookies\";\r\nconst half = \"8pcs of cookies\";\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n\r\n\r\n\r\nconst {setpopup} = props\r\n\r\n// for rendering pages\r\nconst [page, setPage] = useState(banana)\r\n\r\n\r\nconst [cookiesBread, setCookies] = useState([\r\n    {\r\n        id: 201,\r\n        name: 'Vegan Banana Loaf',\r\n        cost: 140,\r\n        qnty: 1,\r\n        image: 'images/galleryone.jpg',\r\n        subname: 'loaded with chocolate chunks'\r\n        },\r\n        {\r\n        id: 202,\r\n        name: 'Banana Loaf',\r\n        cost: 220,\r\n        qnty: 1,\r\n        image: 'images/creamcheese.jpg',\r\n        subname: 'banana loaf with cream cheese inside'\r\n        }\r\n        \r\n])\r\nconst [bundle, setBundle] = useState({\r\n    id: 333,\r\n    name: 'Classic Choco Chips',\r\n    chosen: full,\r\n    cost: 0,\r\n    image: 'images/classic.jpg',\r\n    subname: 'this cookie is loaded with chocolates'\r\n})\r\nconst [bundleqty] = useState([full, half])\r\n\r\n\r\nuseEffect( () => {\r\n\r\n    if(localStorage.getItem('adminauth')){\r\n    return window.location.replace('/adminpage')\r\n    }\r\n  //  setSample(bundle.chosen === full ? 1000 : 600)\r\n    }, [])\r\n//////// FUNCTIONS\r\n\r\nconst changeCost = (e) => {\r\nsetBundle({...bundle, chosen: e.target.value})\r\n}\r\n\r\n\r\n\r\nconst addBundleOrder = (e) => {\r\nlet items;\r\nif(localStorage.getItem('carts') === null){\r\nitems = []\r\n}else{\r\nitems = JSON.parse(localStorage.getItem('carts'))\r\n}\r\nconst bundle = {\r\nuni: Math.random(items.length),\r\nname: e.name,\r\nsubname: e.subname,\r\nchosen: e.chosen,\r\ncost: e.qnty ? e.cost*e.qnty : e.cost,\r\nimage: e.image,\r\nqnty: e.qnty\r\n}\r\nitems.push(bundle)\r\nlocalStorage.setItem('carts', JSON.stringify(items))\r\n\r\nsetpopup(true)\r\n}\r\n\r\n// add qnty cookie\r\nconst addqntycookie = (e) => {\r\n//setCookies(cookiesBread.map(cook => cook.name === e.name ? {...cook, qnty: cook.qnty +1 } : cook))\r\n\r\n// setCookies(cookiesBread.map(cook => {\r\n// if(cook.name === e.name){\r\n\r\n// const fixed = {...cook, qnty: cook.qnty + 1}\r\n// return fixed;\r\n\r\n// }else{\r\n// return cook;\r\n// }\r\n// }))\r\n\r\nsetCookies(cookiesBread.map(cook => {\r\nif(cook.name === e.name) return {...cook, qnty: cook.qnty + 1}\r\nif(cook.name !== e.name) return cook;\r\n\r\n}))\r\n\r\n}\r\n\r\n// deduct qnty cookie\r\nconst deductCookie = (e) => {\r\n\r\nconst matched = cookiesBread.find(cookie => cookie.name === e.name)\r\n\r\n// if(matched.qnty === 6){\r\n// setCookies(cookiesBread.map(cook => cook.name === e.name ? {...cook, qnty: 6} : cook))\r\n// }else{\r\n// setCookies(cookiesBread.map(cook => cook.name ===e.name ? {...cook, qnty: cook.qnty -1 } : cook))\r\n// }\r\n\r\n\r\nif(matched.qnty === 1){\r\nsetCookies(cookiesBread.map(cook => cook.name === e.name ? {...cook, qnty: 1} : cook))\r\n}else{\r\nsetCookies(cookiesBread.map(cook => cook.name === e.name ? {...cook, qnty: cook.qnty - 1} : cook ))\r\n}\r\n\r\n\r\n\r\n}\r\n\r\nconst showNow = () => {\r\nsetBundle({...bundle, cost: bundle.chosen === full ? 1000 : 600})\r\n}\r\n\r\n\r\n\r\n// rendering banana menus \r\nconst bananaMenu = () => (\r\n<div className=\"banana-breads\">\r\n\r\n    <div className=\"bundle-order\">\r\n\r\n        <div className=\"bndl-imgbx\">\r\n        \r\n            <img src={bundle.image} alt=\"baked.by.art\"\r\n            className=\"bndl-img\" />\r\n        </div>\r\n\r\n        <div className=\"bndl-cnt\">\r\n            <div>\r\n                <div className=\"bndl-name\">{bundle.name}</div>\r\n                <div className=\"bndl-subname\">{bundle.subname}</div>\r\n            </div>\r\n\r\n            <div className=\"another-imgbx\">\r\n                <img src=\"/images/trycookie.jpg\"\r\n                className=\"another-img\"alt=\"baked.by.art\" />\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"bndle-cost\">Price: ₱{bundle.chosen === full ? 1000 : 600}</div>\r\n                <div>\r\n                <label className=\"bndl-label\">Choose Quantity: </label>\r\n                <select value={bundle.chosen} onChange={changeCost} className=\"bndl-sel\">\r\n                {\r\n                bundleqty.map((bndl,idx) => (\r\n                <option value={bndl} key={idx}>{bndl}</option>\r\n                ))\r\n                }\r\n                </select>\r\n                {/* <h3>sample: {sample}</h3> */}\r\n                </div>\r\n                <div className=\"bndl-inst\">you can choose more cookies in our \r\n                <Link style={{color: 'brown', opacity: '.8'}} to=\"/cookiemenu\"> MENU</Link></div>\r\n                <div className=\"btn-cont\">\r\n                <button onClick={() => addBundleOrder(bundle)} onMouseDown={showNow} className=\"bndl-btn\">ADD TO CART</button>\r\n                <button onClick={openAllMenu} className=\"bndlshow-btn\">SHOW ALL MENU</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n)\r\n\r\n// rendering cookies menu\r\nconst cookiesMenu = () => (\r\n<div className=\"cookie-breads\">\r\n\r\n\r\n<div className=\"flex-cont\">\r\n{\r\ncookiesBread.map(bread => (\r\n<div className=\"bread-cont\" key={bread.id}>\r\n\r\n    <div className=\"bread-imgbx\">\r\n    <img src={bread.image} alt=\"baked.by.art\" className=\"img-bread\"/>\r\n    </div>\r\n\r\n    <div className=\"bread-cnt\">\r\n        <div className=\"bread-name\">{bread.name}</div>\r\n        <div className=\"bread-subname\">{bread.subname}</div>\r\n\r\n        <div className=\"price\">₱{bread.cost*bread.qnty}</div>\r\n            <div className=\"qnty-bx\">\r\n\r\n                    <div className=\"qnty-cont\">\r\n                        <div className=\"qntys\"><span className=\"qnty-cap\">Quantity</span> {bread.qnty}</div>\r\n\r\n                        <div className=\"qnty-btns\">\r\n                            <button onClick={() => addqntycookie(bread)} className=\"qty-add-btn\">add quantity</button>\r\n                            <button onClick={() => deductCookie(bread)} className=\"qnty-btn\"><i className=\"fas fa-minus\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                \r\n            </div>\r\n        \r\n        <button onClick={() => addBundleOrder(bread)} className=\"addtocart\">ADD TO CART</button>\r\n        <button onClick={openAllMenu} className=\"openmenu\">OPEN ALL MENU</button>\r\n    </div>\r\n\r\n</div>\r\n))\r\n}\r\n</div>\r\n\r\n\r\n</div>\r\n)\r\n///////////////////// FUNCTIONS\r\n\r\n// opening all menu\r\nconst openAllMenu = () => {\r\nwindow.location.replace('/collection')\r\n}\r\n\r\n//// START OF RETURNING HTML\r\nreturn(\r\n<div>\r\n\r\n<div className=\"test-home\">\r\n    <img src=\"/images/testwalltwo.jpg\" \r\n    alt='baked.by.art' className=\"test-img\" />\r\n    <div className=\"madebyhand-bx\">\r\n    \r\n        <div className=\"the-logobx\">\r\n            <img src=\"/images/april.png\" alt=\"baked.by.art\"\r\n            className=\"the-logoimg\" />\r\n        </div>\r\n\r\n        <p className=\"madebyhand\">made by hand, from scratch, with love</p>\r\n\r\n        <Link to=\"/collection\" className=\"test-home-btn\">SHOW MENU</Link>\r\n    </div>\r\n</div>\r\n\r\n<Mobobanner />\r\n\r\n<ul style={{marginTop: '60px'}} className=\"bread-choice\">\r\n<li>\r\n<button className={page === banana ? 'active' : 'not-active'}\r\nonClick={() => setPage(banana)}>Classic Cookies</button>\r\n</li>\r\n<li>\r\n<button className={page === cookies ? 'active' : 'not-active'}\r\nonClick={() => setPage(cookies)}>Banana breads</button>\r\n</li>\r\n</ul>\r\n\r\n{page === banana ? bananaMenu() : cookiesMenu()}\r\n\r\n\r\n<p className=\"gallery\">Gallery</p>\r\n<Bundle />\r\n\r\n<p className=\"cookie-ttle-page\">Introducing Our Cookies</p>\r\n<AboutCookies />\r\n\r\n</div>\r\n)}\r\nexport default Home;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bundle.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Cart.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Collection.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Checkout.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Shipping.js",["98"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Link } from 'react-router-dom';\r\nconst log = console.log;\r\n\r\n\r\n\r\nconst Shipping = () => {\r\n\r\nif(localStorage.getItem('carts') === null){\r\nwindow.location.replace('/')\r\n}\r\nconst addThisTocart = JSON.parse(localStorage.getItem('carts'))\r\nconst addTotal = JSON.parse(localStorage.getItem('checkout'))\r\nconst  localemail = JSON.parse(localStorage.getItem('localEm'))\r\n\r\n\r\nconst [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n\r\n\r\nconst [shipName, setShipName] = useState();\r\nconst [shipLname, setShipLname] = useState();\r\nconst [shipAddress, setShipAdd] = useState();\r\nconst [shipSub, setShipSub] = useState();\r\nconst [shipCity, setShipCity] = useState();\r\nconst [shipPhone, setShipPhone] = useState();\r\nconst [rqMessage, setRqMessage] = useState();\r\n\r\nconst [isLoad, setIsLoad] = useState(false)\r\n\r\nconst [isComplete, setIsComplete] = useState(false)\r\n\r\n// FUNCTIONSS\r\nconst savetoData = () => {\r\n    renderLoadingScreen();\r\n    const address = JSON.parse(localStorage.getItem('address'))\r\n\r\n    const toPost = {\r\n    orderno: Math.floor(Math.random()*90000) + 10000,\r\n    useremail: localemail,\r\n    useraddress:address,\r\n    thecarts: addThisTocart,\r\n    total: addTotal,\r\n    orderdate: new Date()\r\n    }\r\n\r\n    axios.post('https://bakedbyartapi.herokuapp.com/orders/add', toPost)\r\n    .then( () => {\r\n    const lastinfo = {orderno: toPost.orderno};\r\n    localStorage.setItem('lastinfo', JSON.stringify(lastinfo));\r\n    setTimeout( ()  => {\r\n    window.location.replace('/receipt')\r\n    }, 1500)\r\n    })\r\n    .catch(err => log(err))\r\n}\r\n\r\nconst renderBodyNone = () => {\r\nwindow.document.querySelector('body').style.overflow = 'hidden';\r\n}\r\nconst renderLoadingScreen = () => (\r\n<div className=\"loadingscreen\">\r\n<div className=\"load-cont\">\r\n    <div className=\"img-loadbx\">\r\n        <img src=\"/images/april.png\" className=\"img-load\" alt=\"baked.by.art\" />\r\n    </div>\r\n    <h3>Processing your receipt ...</h3>\r\n    {renderBodyNone()}\r\n</div>\r\n</div>\r\n)\r\n\r\n\r\nconst addtoData = (e) => {\r\ne.preventDefault()\r\n\r\n\r\n\r\nif(shipPhone.length < 9){\r\nalert('Insert Valid Phone Number')\r\nreturn setShipPhone('')\r\n}\r\n\r\nsetIsLoad(true)\r\n\r\nconst toPut = {\r\nname: shipName,\r\nlname: shipLname,\r\naddress: shipAddress,\r\nbldg: shipSub,\r\ncity: shipCity,\r\nphone: shipPhone,\r\nrqmess: rqMessage,\r\ndate: selectedDate,\r\n}\r\nlocalStorage.setItem('address', JSON.stringify(toPut))\r\nsavetoData();\r\n}\r\n\r\nconst checkComplete = () => {\r\nif(rqMessage === undefined || rqMessage.length === 0){\r\nsetIsComplete(false)\r\nalert('fill the missing blanks or put NONE')\r\n}else{\r\nsetIsComplete(true)\r\n}\r\n}\r\n\r\nreturn(\r\n<div className=\"shipping-page\" style={{position: 'relative'}}>\r\n<h1 style={{marginBottom: '30px'}} className=\"ch-logoname\">\r\n    <Link style={{textDecoration: 'none', color: 'brown'}} to=\"/\">Baked.By.Art</Link>\r\n</h1>\r\n    <div className=\"ship-cont\">\r\n\r\n        <div className=\"shipform-cont\">\r\n            <form className=\"ship-form\">\r\n                    <div className=\"shp-header\">SHIPPING</div>\r\n                <div className=\"form-namelastname inpbx\">\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"Name\"\r\n                    value={shipName} onChange={e => setShipName(e.target.value)} required/>\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"lastname\"\r\n                    value={shipLname} onChange={e => setShipLname(e.target.value)} required/>\r\n                </div>\r\n                <div className=\"ship-address-sub inpbx\">\r\n                    <input className=\"shp-inp shp-add\" type=\"text\" alt=\"\" placeholder=\"address\"\r\n                    value={shipAddress} onChange={e => setShipAdd(e.target.value)}required/>\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"Subv/Apt#/Bldg#\"\r\n                    value={shipSub} onChange={e => setShipSub(e.target.value)}required/>\r\n                </div>\r\n                <div className=\"zip-city inpbx\">\r\n                    <input className=\"shp-inp\" type=\"text\" alt=\"\" placeholder=\"City\"\r\n                    value={shipCity} onChange={e => setShipCity(e.target.value)}required/>                   \r\n                </div>\r\n                <div className=\"phone-number inpbx\">\r\n                <input className=\"shp-inp phone\" type=\"number\" alt=\"\" placeholder=\"Phone Number\"\r\n                value={shipPhone} onChange={e => setShipPhone(e.target.value)} required/>\r\n                </div>\r\n                <label className=\"date-lbl\">Delivery date: <i class=\"fas fa-calendar-alt\"></i> <DatePicker className=\"date-fek\" selected={selectedDate} onChange={date => setSelectedDate(date)} />\r\n                </label>\r\n\r\n                <fieldset>\r\n                <legend>message your favorite topings and mix</legend>\r\n                <textarea className=\"rq-message\" value={rqMessage} \r\n                onChange={e => setRqMessage(e.target.value)}/>\r\n                </fieldset>\r\n\r\n                <div className=\"shp-header\">BILLING</div>\r\n                <div className=\"billing-bx\">\r\n                <label to=\"cod\" className=\"lbl-cod\">    \r\n                <input type=\"radio\" name=\"cod\" id=\"cod\" className=\"cod\"/> \r\n                Cash On Delivery</label>\r\n\r\n                <label to=\"paypal\" className=\"lbl-cod\">    \r\n                <input type=\"radio\" name=\"cod\" id=\"paypal\" className=\"cod\"/> \r\n                PAYPAL</label>\r\n                </div>\r\n\r\n                <div className=\"ship-btnbx\">\r\n                    <button onMouseMove={checkComplete} onClick={addtoData} className=\"ship-btn\">\r\n                    CONTINUE CHECKOUT\r\n                    </button>\r\n                </div>\r\n\r\n                \r\n            </form>\r\n        </div>    \r\n\r\n        <div className=\"ship-details\">\r\n        <div className=\"shp-header\">YOUR ORDERS</div>\r\n            {\r\n            JSON.parse(localStorage.getItem('carts')).map(shpitem => (\r\n            <div className=\"ship-items\" key={shpitem._id}>\r\n                <div className=\"ship-itemsImgBx\">\r\n                    <img src={shpitem.image} alt=\"baked.by.art\" \r\n                    className=\"shp-img\"/>\r\n                </div>\r\n                <div className=\"shipitem-name\">\r\n                    <div className=\"shp-name\">{shpitem.name}</div>\r\n                    <div className=\"shp-subname\">{shpitem.subname}</div>\r\n                    <div className=\"shp-qnty-cost\">\r\n                        <div className=\"shp-qnty\">{!shpitem.qnty ? shpitem.chosen : `${shpitem.qnty}${shpitem.qnty === 1 ? 'pc of bread' : 'pcs of bread'}`}</div>\r\n                        <div className=\"shp-cost\">${shpitem.cost}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n{isLoad ? renderLoadingScreen() : <> </>}\r\n</div>\r\n)\r\n}\r\nexport default Shipping;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\Footer.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Receipt.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Signin.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Register.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\mobobanner.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Mobobanner.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Bananamenus.js",["99"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Bananamenus = (props) => {\r\n\r\nconst {thebananaz, setThebananaz} = props\r\n\r\nreturn(\r\n<div className=\"menu-page\">\r\n\r\n<h1 style={{marginBottom: '30px'}} className=\"ch-logoname\">\r\n        <Link style={{textDecoration: 'none', color: 'brown'}} to=\"/\">Baked.By.Art</Link>\r\n</h1>\r\n\r\n<h1 className=\"menu-page-ttle\">Banana Breads</h1>\r\n\r\n<div className=\"menu-container\">\r\n{\r\nthebananaz.map(banana => (\r\n<div key={banana.id} className=\"themenu-bx\">\r\n<Link className=\"link-menu\" to={`/bananasinfo/${banana.id}`}>\r\n    <div className=\"menu-imgbx\">\r\n        <img src={banana.image} alt=\"baked.by.art\"\r\n        className=\"img-bananaimg\" />    \r\n    </div>\r\n    <div className=\"menu-cnt\">\r\n        <p className=\"menu-name\">\r\n            {banana.name}\r\n        </p>\r\n        <p className=\"menu-name\">\r\n            {banana.subname}\r\n        </p>\r\n        <p className=\"menu-cost\">{`₱ ${banana.cost.toFixed(2)}`} </p>\r\n\r\n        <Link className=\"link-menu\" to=\"/bananainfo\" />\r\n\r\n    </div>\r\n</Link>\r\n</div>\r\n))\r\n}\r\n</div>\r\n\r\n</div>\r\n)\r\n}\r\nexport default Bananamenus;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\BananasInfo.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\Popup.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\AdminPage.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\AboutCookies.js",[],"C:\\forweb\\projects\\bakedbyart\\src\\comp\\CookieMenu.js",["100"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst CookieMenu = (props) => {\r\n\r\nconst {thecookie, setThecookie} = props\r\n\r\nreturn(\r\n<div className=\"menu-page\">\r\n\r\n<h1 style={{marginBottom: '30px'}} className=\"ch-logoname\">\r\n        <Link style={{textDecoration: 'none', color: 'brown'}} to=\"/\">Baked.By.Art</Link>\r\n</h1>\r\n\r\n<h1 className=\"menu-page-ttle\">Cookies Menu</h1>\r\n\r\n<div className=\"menu-container\">\r\n{\r\nthecookie.map(banana => (\r\n<div key={banana.id} className=\"themenu-bx\">\r\n<Link className=\"link-menu\" to={`/cookiesinfo/${banana.id}`}>\r\n    <div className=\"menu-imgbx\">\r\n        <img src={banana.image} alt=\"baked.by.art\"\r\n        className=\"img-bananaimg\" />    \r\n    </div>\r\n    <div className=\"menu-cnt\">\r\n        <p className=\"menu-name\">\r\n            {banana.name}\r\n        </p>\r\n        <p className=\"menu-name\">\r\n            {banana.subname}\r\n        </p>\r\n        <p className=\"menu-cost\">{`₱ ${banana.cost.toFixed(2)}`} </p>\r\n\r\n        <Link className=\"link-menu\" to=\"/bananainfo\" />\r\n\r\n    </div>\r\n</Link>\r\n</div>\r\n))\r\n}\r\n</div>\r\n\r\n</div>\r\n)\r\n}\r\nexport default CookieMenu;","C:\\forweb\\projects\\bakedbyart\\src\\comp\\CookieInfo.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":107,"column":34,"nodeType":"107","messageId":"108","endLine":107,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":34,"column":8,"nodeType":"111","messageId":"112","endLine":34,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":7,"column":20,"nodeType":"111","messageId":"112","endLine":7,"endColumn":33},{"ruleId":"109","severity":1,"message":"114","line":7,"column":19,"nodeType":"111","messageId":"112","endLine":7,"endColumn":31},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'isComplete' is assigned a value but never used.","Identifier","unusedVar","'setThebananaz' is assigned a value but never used.","'setThecookie' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]